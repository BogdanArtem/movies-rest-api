{
  "openapi": "3.0.0",
  "info": {
    "title": "Movie Database",
    "description": "This is REST-API interface for managing movie database",
    "contact": {
      "email": "you@your-company.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/nix-education/Movies/0.0.1",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "http://0.0.0.0:5000/api",
      "description": "Development enviroment"
    }
  ],
  "tags": [
    {
      "name": "admins",
      "description": "Secured Admin-only calls (including registered and anonyms)"
    },
    {
      "name": "registered",
      "description": "Operations available to registred users (including anonyms)"
    },
    {
      "name": "anonyms",
      "description": "Operations avaliable to any user"
    }
  ],
  "paths": {
    "/tokens": {
      "post": {
        "tags": [
          "registered"
        ],
        "summary": "Recieve token",
        "description": "Generating token for current user. Add this token to header Authorization Bearer for requests requireing registration\n",
        "operationId": "getToken",
        "responses": {
          "200": {
            "description": "Successfull token generation"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "registered"
        ],
        "summary": "delete token",
        "description": "Delete currrent token session for authenticated user\n",
        "operationId": "revokeToken",
        "responses": {
          "204": {
            "description": "token has been successfully deleted"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "admins"
        ],
        "summary": "Get all the users",
        "description": "Using this endpoint, you can search for\nall registered users in the system\n",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "403": {
            "description": "The client did not have permission to access the requested resource."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "anonyms"
        ],
        "summary": "register a new user",
        "description": "Only admins can create new admins",
        "requestBody": {
          "description": "User example to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "new user created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "username or email dublication"
          }
        }
      }
    },
    "/users/{Id}": {
      "get": {
        "tags": [
          "registered"
        ],
        "summary": "Find personal data by id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "request successfully completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "403": {
            "description": "The client did not have permission to access the requested resource."
          },
          "404": {
            "description": "user not not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "registered"
        ],
        "summary": "Change personal data",
        "description": "User is allowed to change it's own data, except admin attribute. Admin can change anything",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been successfully modified"
          },
          "400": {
            "description": "Invalid input, object invalid"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "403": {
            "description": "You are not allowed to change admin attribute"
          },
          "404": {
            "description": "user not not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "registered"
        ],
        "summary": "Delete personal data",
        "description": "Change user's own data",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User has been successfully deleted"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "404": {
            "description": "user not not found"
          },
          "409": {
            "description": "item already exists"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/{Id}/movies": {
      "get": {
        "tags": [
          "registered"
        ],
        "summary": "Find user by id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "403": {
            "description": "The client did not have permission to access the requested resource."
          },
          "404": {
            "description": "User not not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/movies": {
      "get": {
        "tags": [
          "anonyms"
        ],
        "summary": "find all the movies",
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "registered"
        ],
        "summary": "Add new movie",
        "description": "Adds an item to the system",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "409": {
            "description": "user already exists"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/movies/{Id}": {
      "get": {
        "tags": [
          "anonyms"
        ],
        "summary": "find movie by id",
        "description": "By passing in the movie id, you can retrieve all the movie info\n",
        "operationId": "searchMovieId",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request Successfully completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movie"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Movie not not found"
          }
        }
      },
      "put": {
        "tags": [
          "registered"
        ],
        "summary": "Change user's movie",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "409": {
            "description": "an existing item already exists"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "registered"
        ],
        "summary": "Delete user's movie",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "409": {
            "description": "an existing item already exists"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/movies/search": {
      "post": {
        "tags": [
          "anonyms"
        ],
        "summary": "find movies with sorting and filtering",
        "description": "\nThis endpoint uses elasticsearch JSON format in request's body to retrieve data.\nDocs for building JSON file may be found here\nSorting https://www.elastic.co/guide/en/elasticsearch/reference/current/sort-search-results.html\nFiltering https://www.elastic.co/guide/en/elasticsearch/reference/current/filter-search-results.html\n",
        "operationId": "searchMovie",
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movie"
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid input, object invalid"
          }
        }
      }
    },
    "/genres": {
      "get": {
        "tags": [
          "anonyms"
        ],
        "summary": "find all the genres",
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "registered"
        ],
        "summary": "add a new genre",
        "description": "Adds an item to the system",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "409": {
            "description": "an existing item already exists"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/genres/{Id}": {
      "get": {
        "tags": [
          "anonyms"
        ],
        "summary": "find genre by id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Genre not not found"
          }
        }
      },
      "put": {
        "tags": [
          "registered"
        ],
        "summary": "Change genre data",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "409": {
            "description": "item already exists"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "registered"
        ],
        "summary": "Change user data",
        "description": "Change user's own data",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "403": {
            "description": "You don't have permissions"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/directors": {
      "get": {
        "tags": [
          "anonyms"
        ],
        "summary": "find all the directors",
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "registered"
        ],
        "summary": "add new director",
        "description": "Adds an item to the system",
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "403": {
            "description": "You don't have permissions"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/directors/{Id}": {
      "get": {
        "tags": [
          "anonyms"
        ],
        "summary": "find director by id",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "404": {
            "description": "director not not found"
          }
        }
      },
      "put": {
        "tags": [
          "registered"
        ],
        "summary": "Change director",
        "description": "Change director",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "409": {
            "description": "an existing item already exists"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "registered"
        ],
        "summary": "Delete director",
        "description": "Delete director",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "401": {
            "description": "The request did not include an authentication token or the authentication token was expired."
          },
          "409": {
            "description": "an existing item already exists"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "email",
          "is_admin",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "JohnSmith0015"
          },
          "is_admin": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Director": {
        "required": [
          "f_name",
          "l_name"
        ],
        "type": "object",
        "properties": {
          "f_name": {
            "type": "string",
            "example": "Steven"
          },
          "l_name": {
            "type": "string",
            "example": "Spilberg"
          }
        }
      },
      "Genre": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Comedy"
          },
          "movie": {
            "$ref": "#/components/schemas/Movie"
          }
        }
      },
      "Movie": {
        "required": [
          "date",
          "director",
          "genre",
          "name",
          "poster_url",
          "rating",
          "user"
        ],
        "type": "object",
        "properties": {
          "director": {
            "$ref": "#/components/schemas/Director"
          },
          "genre": {
            "$ref": "#/components/schemas/Genre"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "date": {
            "type": "string",
            "format": "datetime",
            "example": "2003-01-7"
          },
          "name": {
            "type": "string",
            "example": "The Life of David Gale"
          },
          "description": {
            "type": "string",
            "example": "The Life of David Gale is a 2003 drama film directed by Alan Parker and written by Charles Randolph"
          },
          "rating": {
            "type": "integer",
            "example": 10
          },
          "poster_url": {
            "type": "string",
            "format": "url"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "The request did not include an authentication token or the authentication token was expired."
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}